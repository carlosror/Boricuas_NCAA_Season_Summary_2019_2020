thyroid_train <- subset(thyroid, split==TRUE)
thyroid_test <- subset(thyroid, split==FALSE)
library(rpart)
library(rpart.plot)
# Building a tree with a minimum of 10 observations on each leaf
thyroid_tree <- rpart(class ~ ., data = thyroid_train, control=rpart.control(minbucket=1))
prp(thyroid_tree)
# Building a tree with a minimum of 10 observations on each leaf
thyroid_tree <- rpart(class ~ ., data = thyroid_train, control=rpart.control(minbucket=50))
prp(thyroid_tree)
# Generate predictions on training set
PredictCART_train = predict(thyroid_tree, type = "class")
# Confusion matrix of training set
conf_matrix_train <- table(thyroid_train$class, PredictCART_train)
conf_matrix_train
sum(diag(conf_matrix_train)) / sum(conf_matrix_train)
PredictCART_test = predict(thyroid_tree, newdata = thyroid_test, type = "class")
# Confusion matrix of test set
conf_matrix_test <- table(thyroid_test$class, PredictCART_test)
conf_matrix_test
sum(diag(conf_matrix_test)) / sum(conf_matrix_test)
library(caret)
library(e1071)
# Setting cross-validation to be 10-fold
fitControl = trainControl( method = "cv", number = 10 )
# Setting cp to .01, .02, ..., 0.5
cartGrid = expand.grid( .cp = (1:50)*0.01)
train(class ~ ., data = thyroid_train, method = "rpart", trControl = fitControl, tuneGrid = cartGrid)
thyroid_tree_cv <- rpart(class ~ ., data = thyroid_train, control=rpart.control(cp=0.03))
prp(thyroid_tree_cv)
# Generate predictions on training set
PredictCART_train_cv = predict(thyroid_tree_cv, type = "class")
# Confusion matrix of training set
conf_matrix_train_cv <- table(thyroid_train$class, PredictCART_train_cv)
conf_matrix_train_cv
# Generate predictions on training set
PredictCART_train_cv = predict(thyroid_tree_cv, type = "class")
# Confusion matrix of training set
conf_matrix_train_cv <- table(thyroid_train$class, PredictCART_train_cv)
conf_matrix_train_cv
sum(diag(conf_matrix_train_cv)) / sum(conf_matrix_train_cv)
# Generate predictions on test set using cross-validated set
PredictCART_test_cv = predict(thyroid_tree_cv, type = "class")
# Confusion matrix of training set
conf_matrix_test_cv <- table(thyroid_test$class, PredictCART_test_cv)
# Generate predictions on test set using cross-validated set
PredictCART_test_cv = predict(thyroid_tree_cv, newdat = thyroid_test, type = "class")
# Confusion matrix of training set
conf_matrix_test_cv <- table(thyroid_test$class, PredictCART_test_cv)
conf_matrix_test_cv
sum(diag(conf_matrix_test_cv)) / sum(conf_matrix_test_cv)
?plot
install.packages("jpeg")
library(jpeg)
setwd("~/")
img <- readJPEG(system.file("img", "999.jpg", package="jpeg"))
img <- readJPEG(system.file("img", "0999.jpg", package="jpeg"))
getcwd()
getwd()
img <- readJPEG(system.file("img", "0999.jpg", package="jpeg"))
img <- readJPEG(system.file("img", "0999.jpg", package="jpeg"))
img <- readJPEG(system.file("img", "0999.jpg", package="jpeg"))
?readJPEG
img <- readJPEG(system.file("img", "0999.JPG", package="jpeg"))
img <- readJPEG("0999.jpg")
str(img)
plot(img)
?clearNames
?clear
img <- readJPEG("0999_gray.jpg")
str(img)
img[1,1]
?dim
dim(img)
img[1,]
img[10,]
img[148,]
q()
library(wordcloud2)
figPath = system.file("examples/t.png",package = "wordcloud2")
wordcloud2(demoFreq, figPath = figPath, size = 1.5,color = "skyblue")
wordcloud2(demoFreq, figPath = figPath, size = 1.5,color = "skyblue")
library(devtools)
devtools::install_github("lchiffon/wordcloud2")
library(wordcloud2)
wordcloud2(demoFreq, figPath = figPath, size = 1.5,color = "skyblue")
figPath = system.file("examples/t.png",package = "wordcloud2")
wordcloud2(demoFreq, figPath = figPath, size = 1.5,color = "skyblue")
setwd("./Boricuas_NCAA/Season_Summary_2019_2020/Women/Articles/Mariana_Trujillo/")
source("trujillo.r")
source("trujillo.r")
?melt
library(reshape2)
?melt
source("trujillo.r")
trujillo_df.m
trujillo_df
source("trujillo.r")
trujillo_df.m
trujillo_df.m
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
?geom_label
?geom_label
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
?position_dodge
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
?legend
?legend.position
?legend.position
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
trujillo_df
trujillo_df
source("trujillo.r")
X <-data.frame(
PonOAC = rep(c('a','b','c','d'),2),
AgeGroup = rep(c("over 80",'under 80'),each=4),
NumberofPractices = rpois(8,70)
) \
X <-data.frame(
PonOAC = rep(c('a','b','c','d'),2),
AgeGroup = rep(c("over 80",'under 80'),each=4),
NumberofPractices = rpois(8,70)
)
X
?colnames
colnames(trujillo_df)
?reda.csv
?read.csv
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
?legend
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
?geom_rect
?geom_rect
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
?guide_legend
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
?annotation_raster
?control
?loop
?readPNG
source("trujillo.r")
source("trujillo.r")
?sep
?paste
source("trujillo.r")
summary(flag_images)
str(flag_images)
source("trujillo.r")
str(Flag_of_Chile)
?readPNG
readPNG("C:/Users/cesargb/Documents/Boricuas_NCAA/Season_Summary_2019_2020/Women/Country_flags/Chile.png")
readPNG("C:/Users/cesargb/Documents/Boricuas_NCAA/Season_Summary_2019_2020/Women/Country_flags/Chile.png", info = TRUE)
str(readPNG("C:/Users/cesargb/Documents/Boricuas_NCAA/Season_Summary_2019_2020/Women/Country_flags/Chile.png", info = TRUE))
summary(readPNG("C:/Users/cesargb/Documents/Boricuas_NCAA/Season_Summary_2019_2020/Women/Country_flags/Chile.png", info = TRUE))
?type
typeof(readPNG("C:/Users/cesargb/Documents/Boricuas_NCAA/Season_Summary_2019_2020/Women/Country_flags/Chile.png", info = TRUE))
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
source("trujillo.r")
ggsave(plot = p_trujillo, filename = "Trujillo_May_2019.png", width = 10, height = 10 * 722 / 952, device = "png", units = "in")
ggsave(plot = p_trujillo, filename = "Trujillo_May_2019.png", width = 9, height = 9 * 722 / 952, device = "png", units = "in")
ggsave(plot = p_trujillo, filename = "Trujillo_May_2019.png", width = 10.2, height = 10.2 * 722 / 952, device = "png", units = "in")
source("trujillo.r")
setwd("./../FMU_Article/")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
fmu_df[fmu_df$Year < 2015]
fmu_df[fmu_df$Year < 2015,]
sum(fmu_df$W[fmu_df$Year < 2015,])
sum(fmu_df$W[fmu_df$Year < 2015])
sum(fmu_df$L[fmu_df$Year < 2015])
w_2005_2014 <- sum(fmu_df$W[fmu_df$Year < 2015])
l_2005_2014 <- sum(fmu_df$L[fmu_df$Year < 2015])
wpctg_2005_2014 <- w_2005_2014(w_2005_2014 + l_2005_2014)
w_2005_2014 <- sum(fmu_df$W[fmu_df$Year < 2015])
l_2005_2014 <- sum(fmu_df$L[fmu_df$Year < 2015])
wpctg_2005_2014 <- w_2005_2014 / (w_2005_2014 + l_2005_2014)
as.data.frame(c("2005-2015", w_2005_2014 , l_2005_2014, wpctg_2005_2014))
as.data.frame(c(1,2,3,4))
as.data.frame(1:4)
as.data.frame(3)
as.data.frame(3,4)
?as.data.frame
as.data.frame(c(1,2), col.names = c("a", "b"))
as.data.frame(t(c(1,2,3,4)))
as.data.frame(t(c("2005-2015", w_2005_2014 , l_2005_2014, wpctg_2005_2014)))
names(fmu_df)
fmu_df_2 <- rbind(row_2005_2014, fmu_df[fmu_df$Year > 2014,])
row_2005_2014 <- as.data.frame(t(c("2005-2015", w_2005_2014 , l_2005_2014, wpctg_2005_2014))) # t for transpose
names(row_2005_2014) <- names(fmu_df)
fmu_df_2 <- rbind(row_2005_2014, fmu_df[fmu_df$Year > 2014,])
row_2005_2014
fmu_df_2
row_2005_2014 <- as.data.frame(t(c("2005-2014", w_2005_2014 , l_2005_2014, wpctg_2005_2014))) # t for transpose
fmu_df$Year <- as.factor(fmu_df$Year)
fmu_df_2 <- rbind(row_2005_2014, fmu_df[fmu_df$Year > 2014,])
fmu_df_2
source("FMU_barplot.r")
fmu_df[fmu_df$Year > 2014,]
fmu_df_2015_2019 <- fmu_df[fmu_df$Year > 2014,]
row_2005_2014
row_2005_2014 <- as.data.frame(t(c("2005-2014", w_2005_2014 , l_2005_2014, wpctg_2005_2014)), stringsAsFactors = FALSE)
rbind(row_2005_2014, fmu_df)
names(row_2005_2014) <- names(fmu_df)
rbind(row_2005_2014, fmu_df)
rbind(row_2005_2014, fmu_df[fmu_df$Year > 2014,])
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
fmu_df_2
fmu_df_2
source("FMU_barplot.r")
summary(fmu_df_2)
summary(row_2005_2014)
c("b", 1)
source("FMU_barplot.r")
source("FMU_barplot.r")
summary(row_2005_2014)
names(fmu_df)
summary(row_2005_2014)
source("FMU_barplot.r")
summary(row_2005_2014)
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
?label
?label
source("FMU_barplot.r")
?signif
fmu_df_2
round(0.400, 3)
signif(0.400, 3)
trunc(0.400, 3)
?sprintf
sprintf("%0.2f", round(0.400, digits = 2))
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
fmu_df_2
p_fmu <- ggplot(fmu_df_2[fmu_df_2$Year < 2019,]) + geom_bar(aes(x = Year, y = Winning_Pctg), stat = "identity", fill = "#075EAB", width = 0.4) +
theme_plot() +
geom_text(aes(label = sprintf("%0.3f", round(Winning_Pctg, 3)), x = Year, y = Winning_Pctg), position = position_dodge(width = 0.75), vjust = -0.75, colour = "#FC8C38", size = 6) +
ylab("Winning percentage") +
ylim(0, 0.7)
p_fmu
p_fmu + ggplot(fmu_df_2[fmu_df_2$Year == 2019,]) + geom_bar(aes(x = Year, y = Winning_Pctg), stat = "identity", fill = "red", width = 0.4)
fmu_df_2$Highlight <- ifelse(fmu_df_2$Year == 2019, "Yes", "No")
fmu_df_2
p_fmu <- ggplot(fmu_df_2) + geom_bar(aes(x = Year, y = Winning_Pctg), stat = "identity", fill = "#075EAB", width = 0.4) +
theme_plot() +
geom_text(aes(label = sprintf("%0.3f", round(Winning_Pctg, 3)), x = Year, y = Winning_Pctg), position = position_dodge(width = 0.75), vjust = -0.75, colour = "#FC8C38", size = 6) +
ylab("Winning percentage") +
ylim(0, 0.7) + scale_fill_manual( values = c( "Yes"="tomato", "No"="gray" ), guide = FALSE )
p_fmu
p_fmu <- ggplot(fmu_df_2) + geom_bar(aes(x = Year, y = Winning_Pctg), stat = "identity", width = 0.4) +
theme_plot() +
geom_text(aes(label = sprintf("%0.3f", round(Winning_Pctg, 3)), x = Year, y = Winning_Pctg), position = position_dodge(width = 0.75), vjust = -0.75, colour = "#FC8C38", size = 6) +
ylab("Winning percentage") +
ylim(0, 0.7) + scale_fill_manual( values = c( "Yes"="tomato", "No"="gray" ), guide = FALSE )
p_fmu
p_fmu <- ggplot(fmu_df_2) + geom_bar(aes(x = Year, y = Winning_Pctg), stat = "identity", fill = "Highlight", width = 0.4) +
theme_plot() +
geom_text(aes(label = sprintf("%0.3f", round(Winning_Pctg, 3)), x = Year, y = Winning_Pctg), position = position_dodge(width = 0.75), vjust = -0.75, colour = "#FC8C38", size = 6) +
ylab("Winning percentage") +
ylim(0, 0.7) + scale_fill_manual( values = c( "Yes"="tomato", "No"="gray" ), guide = FALSE )
p_fmu
p_fmu <- ggplot(fmu_df_2) + geom_bar(aes(x = Year, y = Winning_Pctg), stat = "identity", fill = Highlight, width = 0.4) +
theme_plot() +
geom_text(aes(label = sprintf("%0.3f", round(Winning_Pctg, 3)), x = Year, y = Winning_Pctg), position = position_dodge(width = 0.75), vjust = -0.75, colour = "#FC8C38", size = 6) +
ylab("Winning percentage") +
ylim(0, 0.7) + scale_fill_manual( values = c( "Yes"="tomato", "No"="gray" ), guide = FALSE )
fmu_df_2
summary(fmu_df_2)
X <- mtcars %>% group_by( cyl ) %>% summarize( mpg = mean(mpg) ) %>% ungroup
p_fmu <- ggplot(fmu_df_2) + geom_bar(aes(x = Year, y = Winning_Pctg, fill = Highlight), stat = "identity", width = 0.4) +
theme_plot() +
geom_text(aes(label = sprintf("%0.3f", round(Winning_Pctg, 3)), x = Year, y = Winning_Pctg), position = position_dodge(width = 0.75), vjust = -0.75, colour = "#FC8C38", size = 6) +
ylab("Winning percentage") +
ylim(0, 0.7) + scale_fill_manual( values = c( "Yes"="tomato", "No"="gray" ), guide = FALSE )
fmu_df_2
p_fmu
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
setwd("./../Mariana_Trujillo/")
source("trujillo.r")
setwd("./../FMU_Article/")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
source("FMU_barplot.r")
setwd("./../Vianca_Vital/")
source("vital.r")
source("vital.r")
source("vital.r")
source("vital.r")
source("vital.r")
source("vital.r")
source("vital.r")
source("vital.r")
source("vital.r")
source("vital.r")
