inter <- gcIntermediate(c(lon_ca, lat_ca), c(lon_me, lat_me), n=50, addStartEnd=TRUE)
lines(inter)
inter
inter <- gcIntermediate(c(lon_ca, lat_ca), c(lon_me, lat_me), n=50, addStartEnd=TRUE)
library(geosphere)
inter <- gcIntermediate(c(lon_ca, lat_ca), c(lon_me, lat_me), n=50, addStartEnd=TRUE)
lat_ca <- 39.164141
lon_ca <- -121.640625
lat_me <- 45.213004
lon_me <- -68.906250
inter <- gcIntermediate(c(lon_ca, lat_ca), c(lon_me, lat_me), n=50, addStartEnd=TRUE)
lines(inter)
inter
ggplot(usa_shp_mainland_2   ) + geom_sf(color = "white", fill = "light gray") + theme_map() + geom_path(as.data.frame(inter))
ggplot(usa_shp_mainland_2   ) + geom_sf(color = "white", fill = "light gray") + theme_map() + geom_path(as.data.frame(inter), aes(x=lon, y=lat, group=NULL))
as.data.frame(inter)
ggplot(usa_shp_mainland_2   ) + geom_sf(color = "white", fill = "light gray") + theme_map() + geom_path(as.data.frame(inter), aes(x=lon, y=lat, group=NULL))
ggplot(usa_shp_mainland_2   ) + geom_path(as.data.frame(inter), aes(x=lon, y=lat, group=NULL))
library(maps)
?map
map("world")
map("states")
map("state")
map("usa")
map("state", add = TRUE)
help(package='maps'
)
xlim <- c(-171.738281, -56.601563)
ylim <- c(12.039321, 71.856229)
map("world", col="#f2f2f2", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
map("usa")
ggplot(usa_shp_mainland_2   ) + geom_path(as.data.frame(inter), aes(x=lon, y=lat, group=NULL))
inter
str(inter)
as.data.frame(inter)
ggplot(usa_shp_mainland_2   ) + geom_path(as.data.frame(inter), aes(x=lon, y=lat))
?geom_path
ggplot(usa_shp_mainland_2   ) + geom_path(data = as.data.frame(inter), aes(x=lon, y=lat))
ggplot(usa_shp_mainland_2   ) + geom_sf(color = "white", fill = "light gray") + theme_map() + geom_path(data = as.data.frame(inter), aes(x=lon, y=lat, group=NULL))
pr_data_join
centroids
source("arcs_map.r")
?gcIntermediate
geocode("SJU")
as.vector(geocode("SJU"))
x <- as.vector(geocode("SJU"))
x
str(x)
str(geocode("SJU"))
x <- str(geocode("SJU"))
x
x <- geocode("SJU")
x
str(x)
as.vector(x)
?as.vector
str(inter)
summary(inter)
inter$lon
inter["lon"]
inter[["lon"]]
inter[["lon"]]
inter["lon"]
?str
ls.str(inter)
names(x)
x["lon"]
names(inter)
?inter
summary(inter)
str(inter)
inter[[1]]
x <- geocode("SJU")
x[1]
x[2]
str(x[2])
str(x[1,1])
x[1,1]
x[1,2]
c(x[1,1], x[1,2])
y <- c(x[1,1], x[1,2])
y
str(y)
?geom_path
x <- seq(0.01, .99, length.out = 100)
df <- data.frame(
x = rep(x, 2),
y = c(qlogis(x), 2 * qlogis(x)),
group = rep(c("a","b"),
each = 100)
)
df
x
y
c(qlogis(x), 2 * qlogis(x))
rep(c("a","b")
)
?rep
df
names(df)
p <- ggplot(df, aes(x=x, y=y, group=group))
p
p + geom_line(linetype = 2)
p + geom_line(aes(colour = group), linetype = 2)
ggplot(df, aes(x=x, y=y, group=group))
p
source("arcs_map.r")
lat_pr <- -75.23993
lon_pr <- 39.99512
geocode("SJU")
lon_pr <- -75.23993
lat_pr <- 39.99512
inter_2 <- gcIntermediate(c(lon_ca, lat_ca), c(lon_pr, lat_pr), n=50, addStartEnd=TRUE)
p + geom_path(data = as.data.frame(inter_2), aes(x=lon, y=lat, group=NULL))
lon_pr <- 18.4278
lon_pr <- -66.0156
lat_pr <- 18.4278
inter_2 <- gcIntermediate(c(lon_ca, lat_ca), c(lon_pr, lat_pr), n=50, addStartEnd=TRUE)
p + geom_path(data = as.data.frame(inter_2), aes(x=lon, y=lat, group=NULL))
all_players$Institution_Coords <- geocode(all_players$Institution, source = "google")
all_players$Institution[1]
geocode(all_players$Institution[1])
geocode(as.character(all_players$Institution[1]))
geocode(as.character(all_players$Institution[1]), messaging = FALSE)
?geocode
all_players$Institution_Coords <- geocode(as.character(all_players$Institution), source = "google")
all_players
summary(all_players)
?geom_path
summary(df)
?left_join
getwd()
source("players_propsymbols.r")
centroids
all_players_2 <- left_join(all_players, centroids, by = c('Hometown' = 'NAME'))
all_players$Hometown <- as.character(all_players$Hometown)
all_players_2 <- left_join(all_players, centroids, by = c('Hometown' = 'NAME'))
summary(all_players_2)
all_players_2["X"]
all_players_2["X", "Y"]
all_players_2[["X", "Y"]]
all_players_2[c("X", "Y")]
summary(all_players_2)
summary(all_players)
all_players$Institution_Coords <- geocode(as.character(all_players$Institution), source = "google")
summary(all_players)
all_players_2 <- left_join(all_players, centroids, by = c('Hometown' = 'NAME'))
summary(aall_players_2)
summary(all_players_2)
all_players_2$X[1]
str(all_players_2$X[1])
lat_pr
?ggcIntermediate
?gcIntermediate
str(inter)
as.data.frame(inter)
?lapply
str(all_players_2["X", "Y"])
str(all_players_2[c("X", "Y")])
all_players_2[c("X", "Y")][1]
all_players_2[c("X", "Y")][1,]
str(all_players_2[c("X", "Y")][1,])
as.vector(all_players_2[c("X", "Y")][1,]
)
str(as.vector(all_players_2[c("X", "Y")][1,]))
?data.frame()
data.frame(c(lon_ca, lon_pr))
data.frame(c(lon_ca, lon_pr), c(lat_ca,lat_pr))
df_cg <- data.frame(c(lon_ca, lon_pr), c(lat_ca,lat_pr))
names(df_cg) <- c("lon", "lat")
df_cg
df_cg <- data.frame(c(lon_ca, lon_pr, lon_me), c(lat_ca, lat_pr, lat_me), c(lon_pr, lon_me, lon_ca), c(lat_pr, lat_me, lat_ca))
df_cg
names(df_cg) <- c("p1_lon", "p1_lat", "p2_lon", "p2_lat")
df_cg
df_cg$name <- c("CA_to_PR", "PR_to_ME", "ME_to_CAR")
df_cg$name <- c("CA_to_PR", "PR_to_ME", "ME_to_CA")
df_cg
df_cg$p1_lon[1]
str(df_cg$p1_lon[1])
?lapply
lapply(c(p1_lon, p1_lat), c(p2_lon, p2_lat), FUN = gcIntermediate
)
lapply(c(df_cg$p1_lon, df_cg$p1_lat), c(df_cg$p2_lon, df_cg$p2_lat), FUN = gcIntermediate)
gcIntermediate(c(df_cg$p1_lon, df_cg$p1_lat), c(df_cg$p2_lon, df_cg$p2_lat))
rows(df_cg)
?row
row(df_cg)
nrow(df_cg)
for (idx in 1:nrow(df_cg)) {gcIntermediate(c(df_cg$p1_lon[idx], df_cg$p1_lat[idx]), c(df_cg$p2_lon[idx], df_cg$p2_lat[idx]))}
z <- for (idx in 1:nrow(df_cg)) {gcIntermediate(c(df_cg$p1_lon[idx], df_cg$p1_lat[idx]), c(df_cg$p2_lon[idx], df_cg$p2_lat[idx]))}
z
gcIntermediate(c(df_cg$p1_lon[idx], df_cg$p1_lat[idx]), c(df_cg$p2_lon[idx], df_cg$p2_lat[idx]))
for (idx in 1:nrow(df_cg)) {1}
?for
for (idx in 1:nrow(df_cg)) 1
z <- for (idx in 1:nrow(df_cg)) 1
z
?mapply
data.frame(a = 1, b = list(c("a", "b")))
data.frame(a = 1, b = I(list(c("a", "b"))))
z <- data.frame(a = 1, b = I(list(c("a", "b"))))
z
summary(z)
z$b
str(z$b)
str(z$b[1])
str(z$b[[1])
str(z$b[[1]])
for (idx in 1:nrow(df_cg)) {print(gcIntermediate(c(df_cg$p1_lon[idx], df_cg$p1_lat[idx]), c(df_cg$p2_lon[idx], df_cg$p2_lat[idx])))}
z <- data.frame()
?rbind
for (idx in 1:nrow(df_cg)) {rbind(z, gcIntermediate(c(df_cg$p1_lon[idx], df_cg$p1_lat[idx]), c(df_cg$p2_lon[idx], df_cg$p2_lat[idx])))}
z
rbind(z, gcIntermediate(c(df_cg$p1_lon[idx], df_cg$p1_lat[idx]), c(df_cg$p2_lon[idx], df_cg$p2_lat[idx])))
z
for (idx in 1:nrow(df_cg)) {z <- rbind(z, gcIntermediate(c(df_cg$p1_lon[idx], df_cg$p1_lat[idx]), c(df_cg$p2_lon[idx], df_cg$p2_lat[idx])))}
z
df_cg
df_cg[rep(1:3, 2),]
df_cg_2 <- df_cg[rep(1:3, 50),]
summary(z)
dim(z)
df_cg_2_z <- cbind(df_cg_2, z)
dim(df_cg_2)
dim(df_cg_2_z)
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p
p + geom_path(data = df_cg_2_z, aes(x=lon, y=lat, group=name))
savehistory("~/Boricuas_NCAA/Season_Summary_2019_2020/Maps/temp/RStudio_history_2020_1004.r")
source("arcs_map.r")
z
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
dim(z)
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p + geom_path(data = inter, aes(x=lon, y=lat, group=NULL))
p + geom_path(data = as.data.frame(inter), aes(x=lon, y=lat, group=NULL))
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
gcIntermediate(c(df_cg$p1_lon[idx], df_cg$p1_lat[idx]), c(df_cg$p2_lon[idx], df_cg$p2_lat[idx]), n=20, addStartEnd=TRUE)
df_cg[rep(1, 22),]
source("arcs_map.r")
dim(source("arcs_map.r"))
dim(df_cg[rep(1, 22),])
df_cg_3 <- df_cg[rep(1, 22),]
dim(z)
df_cg_3 <- cbind(df_cg[rep(1, 22),], z[1:22,]
)
dim(df_cg_3)
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p + geom_path(data = df_cg_3, aes(x=lon, y=lat, group=name))
df_cg[rep(1, 25),]
df_cg[rep(1, 35),]
df_cg[rep(1:2, 22),]
df_cg_2
df_cg_2$name
table(df_cg_2$name)
source("arcs_map.r")
df_cg_2_z
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
rep(1:nrow(df_cg), c(3,3,3))
rep(1:nrow(df_cg), rep(3,3)
)
source("arcs_map.r")
idx
nrow(df_cg)
rep(1:nrow(df_cg), rep(3,20))
?rep
rep(1:nrow(df_cg), rep(20, 3))
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map_start.r")
source("arcs_map.r")
source("arcs_map.r")
source("./../Women/write_csv_files.r")
getwd()
source("./../Women/write_csv_files.r")
getwd()
paste("C:/Users/cesargb/Documents/Boricuas_NCAA/Season_Summary_2019_2020/Maps", "fgsdhs")
paste("C:/Users/cesargb/Documents/Boricuas_NCAA/Season_Summary_2019_2020/Maps", "fgsdhs", sep= "")
source("arcs_map.r")
source("arcs_map.r")
summary(all_players_2)
all_players_2$geometry
source("arcs_map.r")
source("arcs_map.r")
summary(all_players_2)
source("arcs_map.r")
summary(all_players_2)
geocode(all_players$Institution[1:10])
geocode(all_players$Institution[1:10], messaging = FALSE)
qmap("empire state building", zoom = 15, messaging = FALSE, source = "google")
?message
source("arcs_map.r")
?message
summary(all_players_2)
paste(all_players_2$Player, all_players_2$Institution, sep = "_")
all_players_2$Player_Institution <- paste(all_players_2$Player, all_players_2$Institution, sep = " - ")
curves <- data.frame()
# df_cg_2_z <- df_cg_2
for (idx in 1:nrow(all_players_2)) {
curves <- rbind(curves, gcIntermediate(c(all_players_2$Hometown.lon[idx], all_players_2$Hometown.lat[idx]), c(all_players_2$Institution.lon[idx], all_players_2$Institution.lat[idx]), n=20, addStartEnd=TRUE))
# df_cg_2_z <- cbind(df_cg_2, gcIntermediate(c(df_cg$p1_lon[idx], df_cg$p1_lat[idx]), c(df_cg$p2_lon[idx], df_cg$p2_lat[idx]), n=20, addStartEnd=TRUE))
}
summary(all_players_2)
for (idx in 1:nrow(all_players_2)) {
curves <- rbind(curves, gcIntermediate(c(all_players_2$Hometown.lon[idx], all_players_2$Hometown.lat[idx]), c(all_players_2$Institution_Coords.lon[idx], all_players_2$Institution_Coords.lat[idx]), n=20, addStartEnd=TRUE))
# df_cg_2_z <- cbind(df_cg_2, gcIntermediate(c(df_cg$p1_lon[idx], df_cg$p1_lat[idx]), c(df_cg$p2_lon[idx], df_cg$p2_lat[idx]), n=20, addStartEnd=TRUE))
}
curves
all_players_2$Hometown.lon[idx]
all_players_2$Institution_Coords.lon[idx]
all_players_2$Institution_Coords.lon[1]
all_players_2$Institution_Coords
str(all_players_2$Institution_Coords)
z2 <- cbind(all_players_2, all_players_2$Institution_Coords)
summary(z2)
all_players_2$Institution_Coords$lon
source("arcs_map.r")
for (idx in 1:nrow(all_players_2)) {
curves <- rbind(curves, gcIntermediate(c(all_players_2$Hometown.lon[idx], all_players_2$Hometown.lat[idx]), c(all_players_2$Institution.lon[idx], all_players_2$Institution.lat[idx]), n=20, addStartEnd=TRUE))
# df_cg_2_z <- cbind(df_cg_2, gcIntermediate(c(df_cg$p1_lon[idx], df_cg$p1_lat[idx]), c(df_cg$p2_lon[idx], df_cg$p2_lat[idx]), n=20, addStartEnd=TRUE))
}
curves
summary(curves)
dim(curves)
summary(all_players_2)
all_players_2$Hometown[is.na(all_players_2), ]
all_players_2$Hometown[is.na(all_players_2)]
all_players_2$Hometown[is.na(all_players_2$Hometown)]
is.na(all_players_2$Hometown)
all_players_2$Hometown[all_players_2$Hometown == ""]
soure("arcs_map.r")
source("arcs_map.r")
str(curves)
summary(all_players_2)
all_players_2 <- all_players_2[all_players_2$Hometown != "",]
summary(all_players_2)
source("arcs_map.r")
rlang::last_error()
summary(all_players_3_curves)
source("arcs_map.r")
all_players_2$Player[all_players_2$State == "North Dakota"]
all_players_2$Player[all_players_2$State == "California"]
all_players_2$Division <- as.character(all_players_2$Division)
?substring
"BvB" %in% all_players_2$Division
"BvB" in all_players_2$Division
ifelse("BvB" %in% all_players_2$Division, 1, 0)
substr(all_players_2$Division, nchar(all_players_2$Division) - 3, nchar(all_players_2$Division))
substr(all_players_2$Division, nchar(all_players_2$Division) - 2, nchar(all_players_2$Division))
ifelse(substr(all_players_2$Division, nchar(all_players_2$Division) - 2, nchar(all_players_2$Division)), 1, 0)
ifelse(substr(all_players_2$Division, nchar(all_players_2$Division) - 2, nchar(all_players_2$Division)) == "BVB", 1, 0)
ifelse(substr(all_players_2$Division, nchar(all_players_2$Division) - 2, nchar(all_players_2$Division)) == "BVB", substr(all_players_2$Division, 1, nchar(all_players_2$Division) - 2), all_players_2$Division)
ifelse(substr(all_players_2$Division, nchar(all_players_2$Division) - 2, nchar(all_players_2$Division)) == "BVB", substr(all_players_2$Division, 1, nchar(all_players_2$Division) - 3), all_players_2$Division)
ifelse(substr(all_players_2$Division, nchar(all_players_2$Division) - 2, nchar(all_players_2$Division)) == "BVB", substr(all_players_2$Division, 1, nchar(all_players_2$Division) - 4), all_players_2$Division)
geocode("Georgia Institute of Technology, Georgia", source = "google")
geocode("Georgia Institute of Technology", source = "google")
unique(all_players_2$Institution)
source("arcs_map.r")
source("arcs_map.r")
source("arcs_map.r")
all_players$Institution_and_State <- paste(all_players$Institution, all_players$State, sep = ", ")
all_players$Institution_and_State
source("arcs_map.r")
all_players_2$Player[all_players_2$State == "New York"]
all_players_2$Institution[all_players_2$State == "New York"]
geocode(all_players_2$Institution[all_players_2$State == "New York"], source = "google")
geocode(all_players_2$Institution_and_State[all_players_2$State == "New York"], source = "google")
ggsave(filename = "arcs_map.png", plot = p, width = 16.05, height = 7.5)
ggsave(filename = "arcs_map.png", plot = p, width = 16.05, height = 7.5)
source("arcs_map.r")
all_players_2$Institution[all_players_2$Institution.lat > 42]
source("arcs_map.r")
all_players_2$Institution[all_players_2$Institution.lat > 42]
geocode("St. Thomas University", source = "google")
colorPalette <- c("#173F5F", "#20639B", "#3CAEA3", "#F6D55C", "#ED553B")
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p <- p + geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution)
)
p + scale_fill_manual(values=colorPalette)
p <- p + geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution)
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p <- p + geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution, color = colorPalette))
p
library(RColorBrewer)
myColors <- brewer.pal(5,"Set1")
names(myColors) <- levels(dat$grp)
colScale <- scale_colour_manual(name = "grp",values = myColors)
names(myColors) <- levels(as.factor(all_players_2$Division))
myColors <- brewer.pal(6,"Set1")
names(myColors) <- levels(as.factor(all_players_2$Division))
colScale <- scale_colour_manual(name = "grp",values = myColors)
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p <- geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution)
)
p + colScale
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p <- p + geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution))
p + colScale
?geom_path
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p <- p + geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution, color = colScale))
p
colorPalette
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p <- p + geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution))
p + scale_color_manual(values=colorPalette)
p + scale_colour_manual(values=colorPalette)
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p <- p + geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution, color = colorPalette))
p
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p <- p + geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution))
colors <- c("NAIA" = "#d52130", "NCAA DI" = "#005eb8", "NCAA DII" = "#005eb8", "NCAA DIII" = "#005eb8", "NJCAA DI" = "#1a4065", "NJCAA DII" = "#1a4065")
p + scale_color_manual(values = colors)
?scale_color_manual
p <- p + geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution, color = Division))
p + scale_color_manual(values = colors)
source("arcs_map.r")
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map()
p <- p + geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution, color = Division))
p <- p + scale_color_manual(values = colors)
p + theme(legend.key.size = unit(0.1, "cm"))
p + theme(legend.key.size = unit(0.4, "cm"))
p + theme(legend.key.size = unit(0.8, "cm"))
p + theme(legend.key.size = unit(1, "cm"))
p + theme(legend.key.height =  = unit(1, "cm"))
p + theme(legend.key.height = unit(1, "cm"))
p + theme(legend.key.width = unit(1, "cm"))
p + theme(legend.key.height = unit(3, "cm"))
p + theme(legend.height = unit(3, "cm"))
p + theme(legend.key.size = unit(3, "cm"))
getwd()
all_players_2["Alondra" %in% all_players_2$Player,]
unique(all_players_2$Player)
getwd()
source("arcs_map.r")
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map() +
geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution, color = Division))
p + guides(linetype = guide_legend(override.aes = list(size = 2)))
p + guides(linetype = guide_legend(override.aes = list(size = 4)))
?guide_legend
p + guides(linetype = guide_legend(override.aes = list(size = 10)))
?geom_path
p + guides(linetype = guide_legend(override.aes = list(size = c(2,1))))
p + guides(linetype = guide_legend(override.aes = list(size = c(5,1))))
p + guides(linetype = guide_legend(override.aes = list(size = c(5,3))))
p + guides(colour = guide_legend(override.aes = list(alpha=1)))
p + guides(colour = guide_legend(override.aes = list(alpha=0.5)))
p + guides(linetype = guide_legend(override.aes = list(size = 100)))
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map() +
geom_path(data = all_players_3_curves, aes(x=lon, y=lat, linetype = 4, group=Player_Institution, color = Division))
p
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map() +
geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution, color = Division))
p + guides(color = guide_legend(override.aes = list(size = 2)))
source("arcs_map.r")
source("arcs_map.r")
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map() +
geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution, color = Division)) +
guides(color = guide_legend(override.aes = list(size = 2)))
p + scale_color_brewer(palette="Dark2")
p + scale_color_brewer(palette="Set1")
p + scale_color_brewer(palette="Set2")
p + scale_color_brewer(palette="Pastel1")
p + scale_color_brewer(palette="Pastel2")
p + theme(legend.position="top")
p + theme(legend.position="top") + theme(legend.title = element_blank())
source("arcs_map.r")
p + theme(legend.spacing.x = unit(1.0, 'cm'))
p + theme(legend.spacing.x = unit(0.2, 'cm'))
p + theme(legend.spacing.x = unit(0.2, 'cm')) + theme(legend.text = element_text(size = 20))
p + theme(legend.spacing.x = unit(0.2, 'cm')) + theme(legend.text = element_text(size = 12))
display.brewer.all(5)
brewer.pal(6, "Set")
brewer.pal(6, "Set1")
install.packages("yarrr")
source("arcs_map.r")
source("arcs_map.r")
library(yarrr)
p <- ggplot(usa_shp_mainland_and_pr) + geom_sf(color = "white", fill = "light gray") + theme_map() +
geom_path(data = all_players_3_curves, aes(x=lon, y=lat, group=Player_Institution, color = Division)) +
guides(color = guide_legend(nrow = 1, override.aes = list(size = 2)))
p + scale_color_manual(values=yarrr(n=6, name="basel"))
p + scale_color_manual(values=piratepal(n=6, name="basel"))
p + scale_color_manual(values=piratepal(palette="basel"))
piratepal(palette = "basel")
str(piratepal(palette = "basel"))
as.vector(piratepal(palette = "basel"))
basel_pal <- as.vector(piratepal(palette = "basel"))
p + scale_color_manual(colors = basel_pal)
?scale_color_manual
p + scale_color_manual(basel_pal)
p + scale_color_manual(values = basel_pal)
p + scale_color_brewer(palette="Set1")
